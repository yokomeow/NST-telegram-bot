import telebot
import config
import nst
from shutil import copyfile

from telebot import types


#bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def start_message(message):
	sti = open('images/source/start-sticker.webp', 'rb')
	bot.send_sticker(message.chat.id, sti)
	
	# keyboard
	markup_general = types.ReplyKeyboardMarkup(resize_keyboard=True)
	button1_general = types.KeyboardButton('–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ üåÖ')
	button2_general = types.KeyboardButton('–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä ü§∑‚Äç‚ôÄÔ∏è')
	
	markup_general.add(button1_general, button2_general)
	
	bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, \
					 —Å—Ç–∏–ª—å–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç –ª—é–±—É—é —Ç–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞!".format(message.from_user, bot.get_me()), \
					 parse_mode='html', reply_markup=markup_general)
	

@bot.message_handler(content_types=['text'])
def chat(message):
	if message.chat.type == 'private':
		if message.text == '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ üåÖ':
			bot.send_message(message.chat.id,
							 '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –æ–±—ä–µ–∫—Ç –Ω–∞ —Ñ–æ—Ç–æ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–ª—Å—è –ø–æ —Ü–µ–Ω—Ç—Ä—É, —Ç–∞–∫ –∫–∞–∫ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ –∫–∞–¥—Ä–∏—Ä—É–µ—Ç—Å—è.')

		elif message.text == '–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä ü§∑‚Äç‚ôÄÔ∏è':
			content_pic = open('images/source/city-sunset.jpg', 'rb')
			result_pic = open('images/results/result-4.png', 'rb')
			
			reply_markup = types.InlineKeyboardMarkup(row_width=2)
			reply_button1 = types.InlineKeyboardButton('–ö—Ä—É—Ç–æ! üòç', callback_data='good')
			reply_button2 = types.InlineKeyboardButton('–¢–∞–∫ —Å–µ–±–µ.. üòí', callback_data='bad')
			
			reply_markup.add(reply_button1, reply_button2)
			
			bot.send_photo(message.chat.id, content_pic)
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∏–º–µ—Ä, —Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å —Ñ–æ—Ç–æ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∑–∞–∫–∞—Ç–µ... ‚¨ÜÔ∏è')
			bot.send_photo(message.chat.id, result_pic)
			bot.send_message(message.chat.id, '...–∞ —è –¥–µ–ª–∞—é –∏–∑ –Ω–µ–≥–æ —Ñ–æ—Ç–æ –¥–Ω–µ–≤–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞! ‚¨ÜÔ∏è', reply_markup=reply_markup)
			
		else:
			bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üòø')

@bot.message_handler(content_types=['document', 'Document'])  # 'photo', 'Photo'
def photo_processing(message):
	if message.chat.type == 'private':
		file_name = message.document.file_name
		file_id = message.document.file_id
		file_id_info = bot.get_file(message.document.file_id)
		downloaded_file = bot.download_file(file_id_info.file_path)
		with open('./images/source/' + 'content_image.jpg', 'wb') as content_image:
			content_image.write(downloaded_file)
		#print(message.photo[0])
		#bot.download_file(message.photo[0].file_id)
		bot.send_message(message.chat.id, '–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!')

		style_reply_markup = types.InlineKeyboardMarkup(row_width=2)
		style_reply_button1 = types.InlineKeyboardButton('–í–∞–Ω –ì–æ–≥', callback_data='gogh')
		style_reply_button2 = types.InlineKeyboardButton('–ü–∏–∫–∞—Å—Å–æ', callback_data='picasso')
		style_reply_button3 = types.InlineKeyboardButton('–ú–æ–Ω–µ', callback_data='monet')

		style_reply_markup.add(style_reply_button1, style_reply_button2, style_reply_button3)

		style_pic1 = open('images/source/van_gogh.jpg', 'rb')
		style_pic2 = open('images/source/picasso.jpg', 'rb')
		style_pic3 = open('images/source/monet.jpg', 'rb')

		bot.send_photo(message.chat.id, style_pic1)
		bot.send_photo(message.chat.id, style_pic2)
		bot.send_photo(message.chat.id, style_pic3)
		bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å:', reply_markup=style_reply_markup)
			

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			# example feedback
			if call.data == 'good':
				bot.send_message(call.message.chat.id, '–†–∞–¥, —á—Ç–æ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å! ü•∞')
			elif call.data == 'bad':
				bot.send_message(call.message.chat.id, '–õ—é–¥–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–Ω–∏–º–∞–ª–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∏–∫–æ–≤... üòî')
			# style
			elif call.data == 'gogh':
				bot.send_message(call.message.chat.id, '"–ó–≤–µ–∑–¥–Ω–∞—è –ù–æ—á—å" - —Ö–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä! üåÉ')
				copyfile('images/source/van_gogh.jpg', 'images/source/style_image.jpg')
				launch_nst(call.message)
			elif call.data == 'picasso':
				bot.send_message(call.message.chat.id, '–ü–∏–∫–∞—Å—Å–æ - –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! üåö')
				copyfile('images/source/picasso.jpg', 'images/source/style_image.jpg')
				launch_nst(call.message)
			elif call.data == 'monet':
				bot.send_message(call.message.chat.id, '–ú–æ–Ω–µ - —á—É–¥–µ—Å–Ω–∞—è –∑–∞–¥—É–º–∫–∞! üå∫')
				copyfile('images/source/monet.jpg', 'images/source/style_image.jpg')
				launch_nst(call.message)
			# result feedback
			elif call.data == 'amazing':
				bot.send_message(call.message.chat.id, '–ö—Ä—É—Ç–æ! –°–∞–º –≤ —à–æ–∫–µ, —á—Ç–æ —Ç–∞–∫ –∫–ª–∞—Å—Å–Ω–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å! üí•')
			elif call.data == 'nice':
				bot.send_message(call.message.chat.id, '–°—É–ø–µ—Ä! üëç')
			elif call.data == 'ok':
				bot.send_message(call.message.chat.id, '–ú–æ–∂–µ—Ç, –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —É –º–µ–Ω—è –ª—É—á—à–µ –ø–æ–ª—É—á–∏—Ç—Å—è. üòï')
			elif call.data == 'gross':
				bot.send_message(call.message.chat.id, '–ù–∞–¥–µ—é—Å—å, —ç—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –º–µ–∂–¥—É –Ω–∞–º–∏... üëâüëà')

			# remove inline buttons
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text= '...',
								  reply_markup=None)
	except Exception as e:
		print(repr(e))
				

def launch_nst(message):
	print('ok')
	content_image_name = 'images/source/content_image.jpg'
	style_image_name = 'images/source/style_image.jpg'
	content = open(content_image_name, 'rb')
	style = open(style_image_name, 'rb')

	bot.send_photo(message.chat.id, content)
	bot.send_message(message.chat.id, '–ù–∞—á–∞–ª –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. ‚öôÔ∏è')

	bot.send_photo(message.chat.id, style)
	bot.send_message(message.chat.id, '–° —Ç–∞–∫–∏–º —Å—Ç–∏–ª–µ–º.')

	bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –≠—Ç–æ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 6 –º–∏–Ω—É—Ç...')

	nst.main(content_image_name, style_image_name)

	bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ!')
	result = open('images/results/bot-result.png', 'rb')
	bot.send_photo(message.chat.id, result)

	result_reply_markup = types.InlineKeyboardMarkup(row_width=2)
	result_reply_button1 = types.InlineKeyboardButton('–í–∞—É, —à–∏–∫–∞—Ä–Ω–æ!', callback_data='amazing')
	result_reply_button2 = types.InlineKeyboardButton('–û—á–µ–Ω—å –¥–∞–∂–µ –Ω–µ–ø–ª–æ—Ö–æ', callback_data='nice')
	result_reply_button3 = types.InlineKeyboardButton('–ù–æ—Ä–º–∞–ª—å–Ω–æ', callback_data='ok')
	result_reply_button4 = types.InlineKeyboardButton('–û–π...–∫–æ—à–º–∞—Ä', callback_data='gross')

	result_reply_markup.add(result_reply_button1, result_reply_button2, result_reply_button3, result_reply_button4)

	bot.send_message(message.chat.id, '–ù—É, –∫–∞–∫ —Ç–µ–±–µ? üßê', reply_markup=result_reply_markup)


# RUN
bot.polling(none_stop=True)
